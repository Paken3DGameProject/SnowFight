cmake_minimum_required(VERSION 2.8)
project(SnowFight CXX)
set(CMAKE_CXX_STANDARD 17)
if(MSVC)
    string(REPLACE "/W3" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4 /EHsc")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
	set(CMAKE_CXX_FLAGS "/source-charset:utf-8")
	set(GLFW_GLEW_libraries_dirs C:/ CACHE STRING description)
	set(GLFW_GLEW_include_dirs C:/ CACHE STRING description)
	link_directories(${GLFW_GLEW_libraries_dirs})
	include_directories(${GLFW_GLEW_include_dirs})
	add_library(Matrix SHARED Matrix.cpp Matrix.hpp .clang-format dll-def/Matrix.def)
	add_library(Vector3 SHARED Vector3.cpp Vector3.hpp .clang-format dll-def/Vector3.def)
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -g3")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2")
	Find_Package(PkgConfig REQUIRED)
	pkg_search_module(GLFW REQUIRED glfw3)
	Find_Package(GLEW REQUIRED)
	Find_Package(OpenGL REQUIRED)
	add_library(Matrix SHARED Matrix.cpp)
	add_library(Vector3 SHARED Vector3.cpp)
endif()
add_executable(Test main.cpp Base.hpp .clang-format)

if(MSVC)
	target_link_libraries(Test opengl32)
	target_link_libraries(Test glew32d)
	target_link_libraries(Test glfw3)
	target_link_libraries(Matrix opengl32)
	target_link_libraries(Matrix glew32d)
	target_link_libraries(Matrix glfw3)
	target_link_libraries(Vector3 opengl32)
	target_link_libraries(Vector3 glew32d)
	target_link_libraries(Vector3 glfw3)

else()
	target_link_libraries(Test ${OPENGL_LIBRARY})
	target_link_libraries(Test ${GLEW_LIBRARIES})
	target_link_libraries(Test ${GLFW_LIBRARIES})
	target_link_libraries(Matrix ${OPENGL_LIBRARY})
	target_link_libraries(Matrix ${GLEW_LIBRARIES})
	target_link_libraries(Matrix ${GLFW_LIBRARIES})
	target_link_libraries(Vector3 ${OPENGL_LIBRARY})
	target_link_libraries(Vector3 ${GLEW_LIBRARIES})
	target_link_libraries(Vector3 ${GLFW_LIBRARIES})
endif()
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY obj)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY obj)
target_link_libraries(Test Matrix)
target_link_libraries(Test Vector3)
